package org.riking.mctesting.runner;

import java.io.FileReader;
import java.io.FileWriter;
import java.util.HashMap;
import java.util.Map;

public class StageBeforeServer implements ActionHandler {

    private static ActionHandler[] chainedHandlers = new ActionHandler[] {
            AnyStageActions.getInstance(),
            InactiveServerActions.getInstance(),
    };

    private Map<String, String> properties = new HashMap<String, String>();

    @Override
    public String getPhaseName() {
        return "pre-server";
    }

    @Override
    public ActionResult doAction(Tester tester, String[] args) throws Exception {
        String command = args[0];

        if ("Properties".equals(command)) {
            properties.put(args[1], args[2]);

            return ActionResult.NORMAL;
        } else if ("Start".equals(command)) {
            // Process server.properties now

            java.util.Properties props = new java.util.Properties();
            props.load(new FileReader("server.properties"));
            props.putAll(properties);
            props.store(new FileWriter("server.properties"), " Minecraft server properties - generated by TestingWrapper");

            return ActionResult.NEXT_STAGE;
        }

        for (ActionHandler handler : chainedHandlers) {
            if (handler.doAction(tester, args) != ActionResult.NOT_FOUND) {
                return ActionResult.NORMAL;
            }
        }

        return ActionResult.NOT_FOUND;
    }
}
